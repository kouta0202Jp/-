<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>...</title>
<script src="anti.js"></script>
    <script>
        if (document.referrer.indexOf("358.f5.si/358.htm") == -1) {
window.location.href = '/358.htm';
}
            </script>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
            margin: 0;
        }

        .card {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* 影の強さを調整 */
            padding: 20px;
            text-align: center;
            width: 555px;
            height:465px;
        }

        h2 {
            margin: 0 0 10px;
        }

        p {
            margin: 0;
        }
    </style>
</head>
<body>
    <div class="card">
        <h1 align="center">Welcome!</h1>
    <input type="text" id="youtubeUrl" placeholder="YES!!!">
    <button onclick="generateIframe()">開始</button>
    <div id="iframeContainer"></div>
        <center>(C) 2024 Massa Inc.</center>
        <canvas id="myCanvas" width="400" height="200"></canvas>
<script>
const canvas = document.getElementById('myCanvas');
const ctx = canvas.getContext('2d');

const texts = ["監視中", "Webバリア"];
let currentTextIndex = 0;
let displayTime = 2000; // 2秒
let lastSwitchTime = Date.now();

function draw() {
ctx.clearRect(0, 0, canvas.width, canvas.height);

// テキストの設定
ctx.font = "30px Arial";
ctx.textAlign = "center";
ctx.textBaseline = "middle";

const text = texts[currentTextIndex];
const textWidth = ctx.measureText(text).width;

// ボーダーの描画
const padding = 10; // 余白
ctx.fillStyle = "white"; // ボーダー内の背景色
ctx.fillRect((canvas.width - textWidth - padding * 2) / 2, (canvas.height - 40) / 2, textWidth + padding * 2, 40);
ctx.strokeStyle = "black"; // ボーダーの色
ctx.lineWidth = 2; // ボーダーの太さ
ctx.strokeRect((canvas.width - textWidth - padding * 2) / 2, (canvas.height - 40) / 2, textWidth + padding * 2, 40);

// テキストの描画
ctx.fillStyle = "black"; // テキストの色
ctx.fillText(text, canvas.width / 2, canvas.height / 2);

// テキストの切り替え
if (Date.now() - lastSwitchTime > displayTime) {
currentTextIndex = (currentTextIndex + 1) % texts.length;
lastSwitchTime = Date.now();
}

requestAnimationFrame(draw);
}

draw();
</script>
    </div>
</body>
        <script>
function generateIframe() {
    const userAgent = navigator.userAgent; // ユーザーエージェント情報を取得
    let deviceName;

    // 簡単なデバイス判別
    if (userAgent.includes("iPhone")) {
        deviceName = "iPhone";
    } else if (userAgent.includes("Android")) {
        deviceName = "Androidデバイス";
    } else if (userAgent.includes("Windows")) {
        deviceName = "Windows PC";
    } else {
        deviceName = "不明なデバイス";
    }

    alert("あなたの" + deviceName + "はウイルスに感染しています。");

    const url = document.getElementById('youtubeUrl').value;
    const videoId = getVideoId(url);
    const iframeContainer = document.getElementById('iframeContainer');

    if (videoId) {
        const iframe = `<iframe width="560" height="315" src="https://www.youtube.com/embed/${videoId}" frameborder="0" allowfullscreen></iframe>`;
        iframeContainer.innerHTML = iframe;
    } else {
        iframeContainer.innerHTML = '無効なURLです。';
    }
}

function getVideoId(url) {
    const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^&\n]{11})/;
    const match = url.match(regex);
    return match ? match[1] : null;
}
    </script>
</html>
